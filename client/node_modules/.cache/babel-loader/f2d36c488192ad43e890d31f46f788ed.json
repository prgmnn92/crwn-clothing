{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Phillip\\\\Desktop\\\\CompleteReactCourseZeroToMaster\\\\crwn-clothing\\\\src\\\\pages\\\\collection\\\\collection.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectCollection } from \"../../redux/shop/shop.selector\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport CollectionItem from \"../../components/collection-item/collection-item.component\";\nimport \"./collection.styles.scss\";\n\nconst CollectionPage = ({\n  collection\n}) => {\n  useEffect(() => {\n    console.log(\"im subscribing\");\n    const unsubscribeFromCollections = firestore.collection(\"collections\").onSnapshot(async snapshot => console.log(snapshot));\n    return () => {\n      //clean Up function\n      console.log(\"im unsubscribing\");\n      unsubscribeFromCollections();\n    };\n  }, []);\n  const title = collection.title,\n        items = collection.items;\n  return React.createElement(\"div\", {\n    className: \"collection-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    className: \"items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, items.map(item => React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))));\n}; // match.params.collectionId\n\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);","map":{"version":3,"sources":["C:/Users/Phillip/Desktop/CompleteReactCourseZeroToMaster/crwn-clothing/src/pages/collection/collection.component.jsx"],"names":["React","useEffect","connect","selectCollection","firestore","CollectionItem","CollectionPage","collection","console","log","unsubscribeFromCollections","onSnapshot","snapshot","title","items","map","item","id","mapStateToProps","state","ownProps","match","params","collectionId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,SAASC,SAAT,QAA0B,+BAA1B;AAEA,OAAOC,cAAP,MAA2B,4DAA3B;AAEA,OAAO,0BAAP;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACzCN,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEA,UAAMC,0BAA0B,GAAGN,SAAS,CACzCG,UADgC,CACrB,aADqB,EAEhCI,UAFgC,CAErB,MAAMC,QAAN,IAAkBJ,OAAO,CAACC,GAAR,CAAYG,QAAZ,CAFG,CAAnC;AAIA,WAAO,MAAM;AACX;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAC,MAAAA,0BAA0B;AAC3B,KAJD;AAKD,GAZQ,EAYN,EAZM,CAAT;AADyC,QAcjCG,KAdiC,GAchBN,UAdgB,CAcjCM,KAdiC;AAAA,QAc1BC,KAd0B,GAchBP,UAdgB,CAc1BO,KAd0B;AAezC,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,KAAvB,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACC,GAAN,CAAUC,IAAI,IACb,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF;AAUD,CAzBD,C,CA2BA;;;AAEA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC5Cb,EAAAA,UAAU,EAAEJ,gBAAgB,CAACiB,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDJ,KAArD;AADgC,CAAtB,CAAxB;;AAGA,eAAejB,OAAO,CAACgB,eAAD,CAAP,CAAyBZ,cAAzB,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { selectCollection } from \"../../redux/shop/shop.selector\";\r\n\r\nimport { firestore } from \"../../firebase/firebase.utils\";\r\n\r\nimport CollectionItem from \"../../components/collection-item/collection-item.component\";\r\n\r\nimport \"./collection.styles.scss\";\r\n\r\nconst CollectionPage = ({ collection }) => {\r\n  useEffect(() => {\r\n    console.log(\"im subscribing\");\r\n\r\n    const unsubscribeFromCollections = firestore\r\n      .collection(\"collections\")\r\n      .onSnapshot(async snapshot => console.log(snapshot));\r\n\r\n    return () => {\r\n      //clean Up function\r\n      console.log(\"im unsubscribing\");\r\n      unsubscribeFromCollections();\r\n    };\r\n  }, []);\r\n  const { title, items } = collection;\r\n  return (\r\n    <div className=\"collection-page\">\r\n      <h2 className=\"title\">{title}</h2>\r\n      <div className=\"items\">\r\n        {items.map(item => (\r\n          <CollectionItem key={item.id} item={item} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// match.params.collectionId\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\r\n});\r\nexport default connect(mapStateToProps)(CollectionPage);\r\n"]},"metadata":{},"sourceType":"module"}